name: Simple Web Command Executor

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. 检出代码
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. 安装依赖
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            python3 \
            python3-pip \
            npm

      # 3. 安装 HTTP Server
      - name: Install HTTP Server
        run: |
          sudo npm install -g http-server
          mkdir -p ~/files
          http-server ~/files -p 8080 &

      # 4. 安装 Cloudflared
      - name: Install Cloudflared
        run: |
          wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
          sudo dpkg -i cloudflared-linux-amd64.deb

      # 5. 启动 Python Web 服务器（支持 WebSocket）
      - name: Start Python Web Server
        run: |
          mkdir -p ~/web-interface
          cd ~/web-interface
          echo '
          import os
          import subprocess
          from flask import Flask, render_template_string
          from flask_socketio import SocketIO

          app = Flask(__name__)
          socketio = SocketIO(app)

          @app.route("/")
          def index():
              return render_template_string("""
                  <h1>命令执行器</h1>
                  <input type="text" id="command" placeholder="输入命令">
                  <button onclick="sendCommand()">执行</button>
                  <pre id="output"></pre>
                  <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.0.1/socket.io.js"></script>
                  <script>
                      const socket = io();
                      const output = document.getElementById("output");

                      function sendCommand() {
                          const command = document.getElementById("command").value;
                          socket.emit("execute_command", { command: command });
                      }

                      socket.on("command_output", function(data) {
                          output.textContent += data.output + "\\n";
                      });
                  </script>
              """)

          @socketio.on("execute_command")
          def handle_command(data):
              command = data["command"]
              process = subprocess.Popen(
                  command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, text=True
              )
              for line in process.stdout:
                  socketio.emit("command_output", {"output": line.strip()})

          if __name__ == "__main__":
              socketio.run(app, host="0.0.0.0", port=3000)
          ' > app.py
          pip3 install flask flask-socketio
          python3 app.py &

      # 6. 启动 Cloudflared 暴露 Python Web 服务器
      - name: Start Cloudflared for Python Web Server
        run: |
          cloudflared tunnel --url http://localhost:3000 &
          echo "等待 Python Web 服务器的 Cloudflared 隧道URL..."
          sleep 10
          ps aux | grep cloudflared

      # 7. 启动 Cloudflared 暴露 HTTP Server
      - name: Start Cloudflared for HTTP Server
        run: |
          cloudflared tunnel --url http://localhost:8080 &
          echo "等待 HTTP Server 的 Cloudflared 隧道URL..."
          sleep 10
          ps aux | grep cloudflared

      # 8. 保持运行并监控
      - name: Keep Alive and Monitor
        run: |
          echo "=== Python Web 服务器信息 ==="
          echo "Web 服务器端口: 3000"
          echo "说明: 使用浏览器连接时，主机地址使用上面cloudflared生成的域名"
          echo "端口使用: 复制cloudflared URL后的端口号"
          echo "=== HTTP Server 信息 ==="
          echo "HTTP Server端口: 8080"
          echo "说明: 使用浏览器连接时，主机地址使用上面cloudflared生成的域名"
          echo "端口使用: 复制cloudflared URL后的端口号"
          while true; do
            echo "=== Status Update $(date) ==="
            sleep 300
          done
